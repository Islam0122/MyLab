import asyncio

from aiogram import F, types, Router, Bot
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import InlineKeyboardButton, FSInputFile
from gtts import gTTS
import os
from handlers.user_panel.start_functions import send_welcome_message
from keyboard.inline import InlineKeyboardBuilder
from filter.chat_types import ChatTypeFilter

text_to_audio_private_router = Router()
text_to_audio_private_router.message.filter(ChatTypeFilter(['private']))


class TextToAudioState(StatesGroup):
    waiting_for_text = State()
    waiting_for_caption = State()  # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è


@text_to_audio_private_router.callback_query(F.data == 'text_to_audio')
async def text_to_audio_callback_query(query: types.CallbackQuery, state: FSMContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–∑–æ–≤–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –∞—É–¥–∏–æ."""
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel_text_to_audio'))

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏, —á—Ç–æ–±—ã –ø–æ–∑–∂–µ —É–¥–∞–ª–∏—Ç—å –µ–≥–æ
    m = await query.message.edit_caption(
        caption="üîä –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ –∞—É–¥–∏–æ...\n\n–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å:",
        reply_markup=keyboard.as_markup()
    )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.update_data(message_id=m.message_id)

    await query.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ –∞—É–¥–∏–æ:")
    await state.set_state(TextToAudioState.waiting_for_text)


@text_to_audio_private_router.callback_query(F.data == 'cancel_text_to_audio')
async def cancel_text_to_audio(query: types.CallbackQuery, state: FSMContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –∞—É–¥–∏–æ."""
    await state.clear()
    await query.message.delete()
    await query.answer("üîä –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –∞—É–¥–∏–æ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    await send_welcome_message(query.from_user, query.message)


@text_to_audio_private_router.message(TextToAudioState.waiting_for_text)
async def text_to_audio_process(message: types.Message, state: FSMContext, bot: Bot) -> None:
    if message.text :
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤ –∞—É–¥–∏–æ."""
        text = message.text
        tts = gTTS(text=text, lang='ru')

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞—É–¥–∏–æ—Ñ–∞–π–ª
        file_path = f"hello.mp3"
        tts.save(file_path)
        voice = FSInputFile(file_path)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.answer_voice(voice)

        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∞—É–¥–∏–æ—Ñ–∞–π–ª
        os.remove(file_path)

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        user_data = await state.get_data()
        message_id = user_data.get("message_id")

        if message_id:
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª–∏ —Ä–∞–Ω–µ–µ
            await bot.delete_message(message.chat.id, message_id)

        # –£–¥–∞–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.delete()


        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await send_welcome_message(message.from_user, message)
        await state.clear()

    else:
        await message.delete()
        m = await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç.")
        await asyncio.sleep(5)
        await m.delete()


